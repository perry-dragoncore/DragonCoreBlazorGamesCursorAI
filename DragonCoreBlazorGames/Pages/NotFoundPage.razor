@page "/404"
@inject NavigationManager NavigationManager

<div class="error-container" tabindex="0" @onkeydown="HandleKeyPress" @ref="container">
    <div class="error-code">404</div>
    <div class="game-over-text">GAME OVER</div>
    <div class="pixel-dragon">
        <i class="fas fa-dragon"></i>
    </div>
    <div class="error-message">
        <p>The level you're looking for is in another castle!</p>
        <div class="controls">
            <div class="control-key">R</div>
            <span>to Restart</span>
            <div class="control-key">ESC</div>
            <span>to Main Menu</span>
        </div>
    </div>
    <div class="buttons">
        <button class="retry-btn" @onclick="Retry">
            <i class="fas fa-redo"></i> Retry Level
        </button>
        <button class="home-btn" @onclick="GoHome">
            <i class="fas fa-home"></i> Main Menu
        </button>
    </div>
</div>

<style>
    .error-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        background: #1a1a1a;
        color: white;
        font-family: 'Press Start 2P', cursive;
        padding: 20px;
        text-align: center;
    }

    .error-code {
        font-size: 120px;
        color: #ff4444;
        text-shadow: 
            0 0 10px rgba(255,68,68,0.5),
            0 0 20px rgba(255,68,68,0.3),
            0 0 30px rgba(255,68,68,0.2);
        animation: glitch 1s infinite;
    }

    .game-over-text {
        font-size: 48px;
        color: #ffd700;
        margin: 20px 0;
        text-shadow: 
            0 0 10px rgba(255,215,0,0.5),
            0 0 20px rgba(255,215,0,0.3);
    }

    .pixel-dragon {
        font-size: 100px;
        color: #ffd700;
        margin: 30px 0;
        animation: float 2s infinite ease-in-out;
    }

    .pixel-dragon i {
        animation: wingFlap 0.8s infinite ease-in-out;
    }

    .error-message {
        font-size: 18px;
        margin: 20px 0;
        color: #cccccc;
    }

    .controls {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        margin-top: 20px;
    }

    .control-key {
        background: #333;
        padding: 10px 15px;
        border-radius: 5px;
        border: 2px solid #666;
        font-size: 14px;
        box-shadow: 0 4px 0 #222;
    }

    .buttons {
        display: flex;
        gap: 20px;
        margin-top: 30px;
    }

    .retry-btn, .home-btn {
        padding: 15px 30px;
        font-family: 'Press Start 2P', cursive;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .retry-btn {
        background: #4CAF50;
        color: white;
    }

    .home-btn {
        background: #3498db;
        color: white;
    }

    .retry-btn:hover, .home-btn:hover {
        transform: scale(1.05);
        box-shadow: 0 0 15px rgba(255,255,255,0.2);
    }

    @@keyframes glitch {
        0% { transform: translate(0); }
        20% { transform: translate(-2px, 2px); }
        40% { transform: translate(-2px, -2px); }
        60% { transform: translate(2px, 2px); }
        80% { transform: translate(2px, -2px); }
        100% { transform: translate(0); }
    }

    @@keyframes float {
        0% { transform: translateY(0); }
        50% { transform: translateY(-20px); }
        100% { transform: translateY(0); }
    }

    @@keyframes wingFlap {
        0% { transform: scaleX(1); }
        50% { transform: scaleX(0.8); }
        100% { transform: scaleX(1); }
    }
</style>

@code {
    private ElementReference container;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await container.FocusAsync();
        }
    }

    private void HandleKeyPress(KeyboardEventArgs e)
    {
        switch (e.Key.ToUpper())
        {
            case "R":
                Retry();
                break;
            case "ESCAPE":
                GoHome();
                break;
        }
    }

    private void Retry()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }
} 